/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TroViet.Views.ChuTro;

import TroViet.DAO.SessionDAO;
import TroViet.DAO.UserDAO;
import TroViet.DAO.UserRole;
import TroViet.Model.SessionEntity;
import TroViet.Model.UserEntity;
import TroViet.Utils.SessionManager;
import static TroViet.Utils.SessionManager.setSession;
import static TroViet.Views.ChuTro.KhuVucLoaiPhongPanel.sessionDao;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.table.DefaultTableModel;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author WINDOWS
 */
public class NguoiDungPanel extends javax.swing.JPanel {

    /**
     * Creates new form NguoiDungPanel
     */
    
    UserDAO userDao = new UserDAO();
    ArrayList<UserDAO> listND = new ArrayList<>();
    DefaultTableModel model;
    UserEntity userSS = SessionManager.getSession().getUser();
    static SessionDAO sessionDao = new SessionDAO();
    
    public NguoiDungPanel() {
        initComponents();
        initTable();
        fillToTableUser();
    }
    
    public void initTable() {
        model = (DefaultTableModel) tblNguoiDung.getModel();
        String[] columns = {"Mã ND", "Họ tên", "Số ĐT", "Email", "Địa chỉ","Mật khẩu", "Phân quyền"};
        model.setColumnIdentifiers(columns);
    }
    
    public void fillToTableUser() {
        model = (DefaultTableModel) tblNguoiDung.getModel();
        model.setRowCount(0);
        try {
            for (UserEntity user : userDao.getAll()) {
                Vector<Object> vec = new Vector<Object>();
                vec.add(user.getId());
                vec.add(user.getHoTen());
                vec.add(user.getDienThoai());
                vec.add(user.getEmail());
                vec.add(user.getDiaChi());
                vec.add(user.getPassword());
                vec.add(user.getRole());
                model.addRow(vec);
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    public void ResetTable() {
        txtHoTen.setText("");
        txtSoDT.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        txtMK.setText("");
        txtMK.setEnabled(true);
        btnGRole.clearSelection();
        lblIdNguoiDung.setText("XX");
    }
    
    public UserEntity getModelND() throws SQLException {
        UserEntity user = new UserEntity();

        Long maND = Long.parseLong(lblIdNguoiDung.getText());
        String hoTen = txtHoTen.getText();
        String DienThoai = txtSoDT.getText();
        String email = txtEmail.getText();
        String diaChi = txtDiaChi.getText();
        String matKhau = txtMK.getText();
        UserRole role;
        if (rbUser.isSelected()) {
            role = UserRole.User;
        } else if (rbTenant.isSelected()) {
            role = UserRole.Tenants;
        } else {
            role = UserRole.Admin;
        }
        
        user.setId(maND);
        user.setHoTen(hoTen);
        user.setDienThoai(DienThoai);
        user.setEmail(email);
        user.setDiaChi(diaChi);
        if (rbUser.isSelected()) {
            user.setRole(UserRole.User);
        } else if (rbTenant.isSelected()) {
            user.setRole(UserRole.Tenants);
        }
        user.setPassword(matKhau);
        user.setNguoiSua(SessionManager.getSession().getUser().getHoTen());

        return user;
    }
    
    public boolean isValidEmail(String email) {
        String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
        Pattern pattern = Pattern.compile(emailRegex);
        return pattern.matcher(email).matches();
    }
    
    public boolean isValidSdt(String DienThoai) {
        String DienThoaiRegex = "^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})$";
        Pattern pattern = Pattern.compile(DienThoaiRegex);
        return pattern.matcher(DienThoai).matches();
    }
    
    
    
    public long getSelectedId() {
        long selectedRow = tblNguoiDung.getSelectedRow();
        if (selectedRow < 0) {
            return -1;
        }
        long id = (long) tblNguoiDung.getValueAt((int) selectedRow, 0);
        return id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGRole = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSoDT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rbUser = new javax.swing.JRadioButton();
        rbTenant = new javax.swing.JRadioButton();
        txtMK = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblIdNguoiDung = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThungRac = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiDung = new javax.swing.JTable();

        setBackground(new java.awt.Color(40, 46, 62));

        jPanel1.setBackground(new java.awt.Color(46, 56, 86));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 205, 31), 2), "Tìm kiếm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 205, 31))); // NOI18N

        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(40, 46, 62));
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(255, 205, 31));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(40, 46, 62));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/magnifier.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnTimKiem)
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(207, 243, 243));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(40, 46, 62));
        jLabel1.setText("QUẢN LÝ NGƯỜI DÙNG");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(40, 46, 62));
        jLabel2.setText("Họ tên:");

        txtHoTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHoTen.setForeground(new java.awt.Color(40, 46, 62));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(40, 46, 62));
        jLabel3.setText("Số điện thoại:");

        txtSoDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSoDT.setForeground(new java.awt.Color(40, 46, 62));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(40, 46, 62));
        jLabel4.setText("Email:");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(40, 46, 62));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(40, 46, 62));
        jLabel5.setText("Địa chỉ:");

        txtDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiaChi.setForeground(new java.awt.Color(40, 46, 62));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(40, 46, 62));
        jLabel6.setText("Phân quyền:");

        rbUser.setBackground(new java.awt.Color(207, 243, 243));
        btnGRole.add(rbUser);
        rbUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rbUser.setForeground(new java.awt.Color(40, 46, 62));
        rbUser.setText("Người dùng");

        rbTenant.setBackground(new java.awt.Color(207, 243, 243));
        btnGRole.add(rbTenant);
        rbTenant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rbTenant.setForeground(new java.awt.Color(40, 46, 62));
        rbTenant.setText("Người thuê trọ");

        txtMK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMK.setForeground(new java.awt.Color(40, 46, 62));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(40, 46, 62));
        jLabel7.setText("Mật khẩu:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(40, 46, 62));
        jLabel8.setText("Mã người dùng:");

        lblIdNguoiDung.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIdNguoiDung.setForeground(new java.awt.Color(255, 205, 31));
        lblIdNguoiDung.setText("XX");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(151, 151, 151)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIdNguoiDung))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rbUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbTenant))
                            .addComponent(txtDiaChi)
                            .addComponent(txtMK)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoDT)
                            .addComponent(txtEmail))))
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8)
                    .addComponent(lblIdNguoiDung))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rbUser)
                    .addComponent(rbTenant))
                .addGap(23, 23, 23))
        );

        jPanel3.setBackground(new java.awt.Color(46, 56, 86));

        btnThem.setBackground(new java.awt.Color(255, 205, 31));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(40, 46, 62));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 205, 31));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(40, 46, 62));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 205, 31));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(40, 46, 62));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/litter.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThungRac.setBackground(new java.awt.Color(255, 205, 31));
        btnThungRac.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThungRac.setForeground(new java.awt.Color(40, 46, 62));
        btnThungRac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/delete.png"))); // NOI18N
        btnThungRac.setText("Thùng rác");
        btnThungRac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThungRacActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 205, 31));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(40, 46, 62));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TroViet/Icon/return.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(255, 205, 31));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(40, 46, 62));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThungRac))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThungRac, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jComboBox1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tblNguoiDung.setBackground(new java.awt.Color(207, 243, 243));
        tblNguoiDung.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNguoiDung.setGridColor(new java.awt.Color(255, 255, 255));
        tblNguoiDung.setSelectionBackground(new java.awt.Color(255, 205, 31));
        tblNguoiDung.setSelectionForeground(new java.awt.Color(40, 46, 62));
        tblNguoiDung.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNguoiDungMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNguoiDung);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) tblNguoiDung.getModel();
        model.setRowCount(0);
        try {
            for (UserEntity nguoidung : userDao.searchByKey(String.valueOf(txtTimKiem.getText()))) {
                Vector<Object> vec = new Vector<Object>();
                vec.add(nguoidung.getId());
                vec.add(nguoidung.getHoTen());
                vec.add(nguoidung.getDienThoai());
                vec.add(nguoidung.getEmail());
                vec.add(nguoidung.getDiaChi());   
                vec.add(nguoidung.getPassword());
                vec.add(nguoidung.getRole().toString());
                model.addRow(vec);
            }
            SessionEntity ss = new SessionEntity();
            ss.setUser(userSS);
            ss.setMessage("Tìm kiếm người dùng");
            ss.setStartTime(new Timestamp(System.currentTimeMillis()));
            sessionDao.save(ss);
            SessionEntity sss = sessionDao.getLast(userSS.getId());
            setSession(sss);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        ResetTable();
        fillToTableUser();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblNguoiDungMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNguoiDungMouseClicked
        // TODO add your handling code here:
        int row = tblNguoiDung.getSelectedRow();
        if(row<0)
        {
            JOptionPane.showMessageDialog(this, "Mời bạn chọn Người Dùng!");
            return;
        }
        else
        {  
            txtMK.setEnabled(false);
            String id = tblNguoiDung.getValueAt(row, 0).toString();
            String hoTen = tblNguoiDung.getValueAt(row, 1).toString();
            String email = tblNguoiDung.getValueAt(row, 3).toString();
            String DienThoai = tblNguoiDung.getValueAt(row, 2).toString();
            String diaChi = tblNguoiDung.getValueAt(row, 4).toString();
            String matKhau = tblNguoiDung.getValueAt(row, 5).toString();
            String role = tblNguoiDung.getValueAt(row, 6).toString();
            
            lblIdNguoiDung.setText(id);
            txtHoTen.setText(hoTen);
            txtSoDT.setText(DienThoai);
            txtEmail.setText(email);
            txtDiaChi.setText(diaChi);
            txtMK.setText(matKhau);
            if(role.equalsIgnoreCase("User")) {
                rbUser.setSelected(true);
            } else if (role.equalsIgnoreCase("Tenants")) {
                rbTenant.setSelected(true);
            } else {
                btnGRole.clearSelection();
            }
        }
    }//GEN-LAST:event_tblNguoiDungMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            String username = txtHoTen.getText();
            String dienThoai = txtSoDT.getText();
            String email = txtEmail.getText();          
            String diaChi = txtDiaChi.getText();
            String matKhau = txtMK.getText();
            UserRole role;
            if (rbUser.isSelected()) {
                role = UserRole.User;
            } else if (rbTenant.isSelected()) {
                role = UserRole.Tenants;
            } else {
                role = UserRole.Admin;
            }
//            char[] passwordChars = txtMK.getPassword();
//            String password = new String(passwordChars);
            
            if (!isValidEmail(email)) {
                JOptionPane.showMessageDialog(this, "Email không hợp lệ!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if (!isValidSdt(dienThoai)) {
                JOptionPane.showMessageDialog(this, "Sdt không hợp lệ!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (userDao.isPhoneExists(dienThoai)) {
                JOptionPane.showMessageDialog(this, "sSdt đã tồn tại!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if (username.isEmpty() || dienThoai.isEmpty() || email.isEmpty() || diaChi.isEmpty() || matKhau.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (userDao.isEmailExists(email)) {
                JOptionPane.showMessageDialog(this, "Email đã tồn tại!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String hashedPassword = BCrypt.hashpw(matKhau, BCrypt.gensalt());
            
            userDao.saveAccountToDatabase(username, dienThoai, email, diaChi, hashedPassword, String.valueOf(role));
            
            JOptionPane.showMessageDialog(this, "Thêm người dùng thành công!");
            ResetTable();
            fillToTableUser();
            SessionEntity ss = new SessionEntity();
            ss.setUser(userSS);
            ss.setMessage("Thêm mới người dùng");
            ss.setStartTime(new Timestamp(System.currentTimeMillis()));
            sessionDao.save(ss);
            SessionEntity sss = sessionDao.getLast(userSS.getId());
            setSession(sss);
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Thêm người dùng thất bại!");
           ex.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        try {
            int ret = JOptionPane.showConfirmDialog(null, "Cập nhật thông tin người dùng này?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (ret == JOptionPane.NO_OPTION) {
                return;
            }
            UserEntity nd = getModelND();
            if (userDao.SuaND(nd) > 0) {
                JOptionPane.showMessageDialog(this, "Cập nhật thông tin người dùng thành công!");
                fillToTableUser();
                ResetTable();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhập thông tin người dùng thất bại");
            }
            SessionEntity ss = new SessionEntity();
            ss.setUser(userSS);
            ss.setMessage("Cập nhật thông tin người dùng");
            ss.setStartTime(new Timestamp(System.currentTimeMillis()));
            sessionDao.save(ss);
            SessionEntity sss = sessionDao.getLast(userSS.getId());
            setSession(sss);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        Long selectedId = getSelectedId();
        try {
            if (JOptionPane.showConfirmDialog(null, "Xác nhận xóa?", "Xóa hóa đơn", ERROR_MESSAGE) != YES_OPTION) {
                return;
            }
            userDao.deleteFromRecycle(selectedId);
            fillToTableUser();
            SessionEntity ss = new SessionEntity();
            ss.setUser(userSS);
            ss.setMessage("Xóa người dùng");
            ss.setStartTime(new Timestamp(System.currentTimeMillis()));
            sessionDao.save(ss);
            SessionEntity sss = sessionDao.getLast(userSS.getId());
            setSession(sss);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThungRacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThungRacActionPerformed
        // TODO add your handling code here:
        ThungRacNguoiDung tr = new ThungRacNguoiDung();
        tr.setVisible(true);
    }//GEN-LAST:event_btnThungRacActionPerformed

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        // TODO add your handling code here:
        if (txtTimKiem.getText().equals("Nhập mã người dùng hoặc số điện thoại để tìm kiếm người dùng!")) {
            txtTimKiem.setText("");
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        // TODO add your handling code here:
        if (txtTimKiem.getText().isEmpty()) {
            txtTimKiem.setText("Nhập mã người dùng hoặc số điện thoại để tìm kiếm người dùng!");
        }
    }//GEN-LAST:event_txtTimKiemFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGRole;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThungRac;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIdNguoiDung;
    private javax.swing.JRadioButton rbTenant;
    private javax.swing.JRadioButton rbUser;
    private javax.swing.JTable tblNguoiDung;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JPasswordField txtMK;
    private javax.swing.JTextField txtSoDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
